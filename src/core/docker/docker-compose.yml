services:
  postgres:
    image: postgres:16-alpine
    container_name: api-videos-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dbvideos}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-dbvideos}",
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ../../..
      dockerfile: Dockerfile
    container_name: api-videos-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ../../../data:/app/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dbvideos}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_data:
